# -*- coding: utf-8 -*-# Created by fml on 2016/5/18.import sysimport osimport timeimport reimport urllibimport datetimereload(sys)sys.path.append('./util')from CrawlerBase import CrawlerBasefrom lxml import etreeimport jsonfrom ModuleManager import Module,Event,Iterator,Sleepfrom util.crawler_util import CrawlerRunMode, InputType, OutputType, EventType, OutputParameterShowUpTypefrom CommonLib.WebContent import WebAccessType, SeedAccessTypeclass CrawlerChongqing(CrawlerBase):    def __init__(self,pinyin, callbackFromOuterControl):        config_dict = dict()        config_dict[CrawlerRunMode.COMPANY_KEY] = [self.initYzmPic,self.initSearchList,self.initCompanyInfo]        config_dict[CrawlerRunMode.COMPANY_URL] = [self.initTopinfo,self.initVistJBxxInfo,self.initVistTable]        check_dict = dict()        CrawlerBase.__init__(self, pinyin, config_dict, check_dict, callbackFromOuterControl)    def initYzmPic(self):        module = Module(self.visitValidateCode, "获取验证码图片")        module.module_id = "yzm_pic"        module.appendUrl('http://gsxt.cqgs.gov.cn/sc.action?width=130&height=40&fs=23 ')        module.appendHeaders({            "Host": "gsxt.cqgs.gov.cn",            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:40.0) Gecko/20100101 Firefox/40.0",            "Accept": "image/png,image/*;q=0.8,*/*;q=0.5",            "Accept-Language": "zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3",            "Accept-Encoding": "gzip, deflate",            "Referer": "http://gsxt.cqgs.gov.cn/",            "Connection": "keep-alive"        })        module.addSleep(Sleep(3))        def postDataJsonAssert(yzm = None):            if yzm == None and str(yzm) == '-9999':                return False            return True        module.addEvent(Event(EventType.ASSERT_FAILED, assert_function=postDataJsonAssert, redo_module="yzm_pic"))        self.module_manager.appendSubModule(module,supportDefaultEvent=True)    def initSearchList(self):        module = Module(self.getWebHtml, '获取公司列表')        module.appendUrl('http://gsxt.cqgs.gov.cn/search.action')        module.appendHeaders({            "Host": "gsxt.cqgs.gov.cn",            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:40.0) Gecko/20100101 Firefox/40.0",            "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",            "Accept-Language": "zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3",            "Accept-Encoding": "gzip, deflate",            "Referer": "http://gsxt.cqgs.gov.cn/",            "Connection": "keep-alive",            "Content-Type": "application/x-www-form-urlencoded"        })        module.appendWebMethod('post')        module.appendPostData(lambda yzm, company_key: {"code": yzm, "key": company_key})        module.addSleep(Sleep(6))        def postDataJsonAssert(html=None):            if html == None:                return False            if u"验证码不正确" in html:                return False            return True        def getSearchList(html=None):            parem = re.compile(r'\<body\>(.*?id\=\"result\".*?)\<\/body\>', re.S)            bodys = re.findall(parem, html)            if not bodys:                return []            bodys = bodys[0]            tree = etree.HTML(bodys)            _list = tree.xpath(".//*[@class='item']")            return _list        def postDataJsonAssert1(search_list=None):            if not search_list:                self.report.access_type = SeedAccessType.NON_COMPANY                self.holder.logging.info("无此公司！")                return False            return True        module.addEvent(Event(EventType.ASSERT_FAILED, assert_function=postDataJsonAssert, redo_module="yzm_pic"))        module.appendOutput("search_list", type=OutputType.FUNCTION, function=getSearchList)        module.addEvent(Event(EventType.ASSERT_FAILED, retry_times=0, assert_function=postDataJsonAssert1))        module.addEvent(Event(EventType.EXCEPTION_OCCURED, retry_times=0, redo_module='yzm_pic'))        module.addSleep(Sleep(3))        self.module_manager.appendSubModule(module)    def initCompanyInfo(self):        iterator = Iterator("search_list", "company")        module = Module(None, "获取公司信息", iterator)        self.module_manager.appendSubModule(module, True)        self.initCompanyInfoPrepare(module)        self.initTopinfo(module)        self.initVistJBxxInfo(module)        self.initVistTable(module)        self.initNianbao(module)        self.initNbprepare(module)        self.initResultCollect(module)    def initCompanyInfoPrepare(self,super_module):        module = Module(None, "抓取公司前的预处理")        module.addSleep(Sleep(2))        def prepare(company):            query_ = dict()            base_attrib = company.xpath('.//a')[0].attrib            for x in base_attrib:                if '-' in x:                    base_attrib[x.replace('-','_').lower()]=base_attrib[x]                    del base_attrib[x]            if not base_attrib:                return query_            query_.update(base_attrib)            query_['search_company'] = ''.join(company.xpath('./a/text()')).strip()            query_['zch'] = ''.join(company.xpath('.//span[1]/span/text()')).strip()            return query_        module.appendOutput(type=OutputType.FUNCTION, function=prepare)        super_module.appendSubModule(module, True)    def initTopinfo(self,super_module):        module = Module(self.visitTopInfo, "抓取公司的TOP信息和公司Type")        module.addSleep(Sleep(2))        module.appendUrl('http://gsxt.cqgs.gov.cn/search_ent')        module.appendHeaders({            "Host": "gsxt.cqgs.gov.cn",            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:40.0) Gecko/20100101 Firefox/40.0",            "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",            "Accept-Language": "zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3",            "Accept-Encoding": "gzip, deflate",            "Referer": "http://gsxt.cqgs.gov.cn/search.action",            "Connection": "keep-alive",            "Content-Type": "application/x-www-form-urlencoded"        })        module.appendWebMethod('post')        module.appendPostData(lambda data_entid,data_id,data_type,search_company:{'id':data_id,                                                                   'type':data_type,                                                                   'name':search_company,                                                                    'entId':data_entid                                                                    })        def getCompanyType(html):            type_re = re.compile(r"id\=[\"|\'].+?[\"|\']\;type\=\'(\d+?)\'\;name\=")            company_type = type_re.search(html)            if company_type:                return company_type.group(1)            return False        def getDataType(html):            data_type = re.search(ur"data-type=\"(\d*?)\"", html)            if data_type:                return int(data_type.group(1))            return 1        # def getTableType(html):        #     pp = re.compile(ur"changeInfoTable.*?src\=\"G/SAIC/register/js/(.+?)\.js.*?src\=\"G/SAIC/register/js/investor\.js\"",re.S)        #     table_type = re.search(pp,html)        #     if table_type:        #         return table_type.group(1)        #     return 'nzgsfr'        module.appendOutput("company_type", type=OutputType.FUNCTION, function=getCompanyType)        module.appendOutput('data_type',type=OutputType.FUNCTION,function=getDataType)        #module.appendOutput('table_type', type=OutputType.FUNCTION, function=getTableType)        module.addEvent(Event(EventType.ASSERT_FAILED, retry_times=0, assert_function=lambda company_type:False if company_type==False else True))        super_module.appendSubModule(module, True)    def initVistJBxxInfo(self,super_module):        module = Module(self.visitJbxx, "抓取公司的基本信息,股东信息,备案信息，分支机构，变更信息，行政处罚等")        module.addSleep(Sleep(1))        module.appendUrl(lambda data_id,data_entid,company_type:'http://gsxt.cqgs.gov.cn/search_getEnt.action?entId=%s&id=%s&type=%s'%(data_entid,data_id,company_type))        module.appendHeaders({            "Host": "gsxt.cqgs.gov.cn",            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:40.0) Gecko/20100101 Firefox/40.0",            "Accept": "application/json, text/plain, */*",            "Accept-Language": "zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3",            "Accept-Encoding": "gzip, deflate",            "X-Requested-With": "XMLHttpRequest",            "Connection": "keep-alive"        })        super_module.appendSubModule(module, True)    def initVistTable(self,super_module):        def url(data_type):            tt = str(int(time.time()) * 1000)            jbxx_table_urls = {                5: "G/SAIC/register/nzhhqy.jsp?t=" + tt,  # 内资合伙企业 type=5                2: "G/SAIC/register/nzfgs.jsp?t=" + tt,  # 内资分公司 type=2                6: "G/SAIC/register/nzhhqyfzjg.jsp?t=" + tt,  # 内资合伙企业分支机构 type=6                3: "G/SAIC/register/nzfgsqyfr.jsp?t=" + tt,  # 内资非公司企业法人 type=3                4: "G/SAIC/register/nzfgsqyfrfzjg.jsp?t=" + tt,  # 内资非公司企业法人分支机构 type=4                1: "G/SAIC/register/nzgsfr.jsp?t=" + tt,  # 内资公司法人 type=1                7: "G/SAIC/register/grdzqy.jsp?t=" + tt,  # 个人独资企业 type=7                8: "G/SAIC/register/grdzfzjg.jsp?t=" + tt,  # 个人独资分支机构 type=8                9: "G/SAIC/register/nzffrqy.jsp?t=" + tt,  # 内资非法人企业 type=9                10: "G/SAIC/register/wzgsfr.jsp?t=" + tt,  # 外资公司法人 type=10                11: "G/SAIC/register/wzfzjg.jsp?t=" + tt,  # 外资分支机构 type=11                12: "G/SAIC/register/wstzhhqy.jsp?t=" + tt,  # 外商投资合伙企业 type=12                13: "G/SAIC/register/wstzhhqyfzjg.jsp?t=" + tt,  # 外商投资合伙企业分支机构 type=13                14: "G/SAIC/register/wgqyzzgscjy.jsp?t=" + tt,  # 外国（地区）企业在中国境内从事生产经营活动 type=14                15: "G/SAIC/register/zwhzffr.jsp?t=" + tt,  # 中外合作非法人企业 type=15                16: "G/SAIC/register/gtgsh.jsp?t=" + tt,  # 个体工商户 type=16                17: "G/SAIC/register/nmzyhzs.jsp?t=" + tt,  # 农民专业合作社 type=17                18: "G/SAIC/register/nmzyhzsfz.jsp?t=" + tt  # 农民专业合作社分支机构 type=18                # "nzhhqy": "G/SAIC/register/nzhhqy.jsp?t=" + tt,  # 内资合伙企业 type=5                # "nzfgs": "G/SAIC/register/nzfgs.jsp?t=" + tt,  # 内资分公司 type=2                # "nzhhqyfzjq": "G/SAIC/register/nzhhqyfzjg.jsp?t=" + tt,  # 内资合伙企业分支机构 type=6                # "nzfgsqyfr": "G/SAIC/register/nzfgsqyfr.jsp?t=" + tt,  # 内资非公司企业法人 type=3                # "nzfgsqyfrfzjq": "G/SAIC/register/nzfgsqyfrfzjg.jsp?t=" + tt,  # 内资非公司企业法人分支机构 type=4                # "nzgsfr": "G/SAIC/register/nzgsfr.jsp?t=" + tt,  # 内资公司法人 type=1                # "grdzqy": "G/SAIC/register/grdzqy.jsp?t=" + tt,  # 个人独资企业 type=7                # 'grdzfzjg': "G/SAIC/register/grdzfzjg.jsp?t=" + tt,  # 个人独资分支机构 type=8                # "nzffrqy": "G/SAIC/register/nzffrqy.jsp?t=" + tt,  # 内资非法人企业 type=9                # "wzgsfr": "G/SAIC/register/wzgsfr.jsp?t=" + tt,  # 外资公司法人 type=10                # "wzfzjg": "G/SAIC/register/wzfzjg.jsp?t=" + tt,  # 外资分支机构 type=11                # "wstzhhqy": "G/SAIC/register/wstzhhqy.jsp?t=" + tt,  # 外商投资合伙企业 type=12                # "wstzhhqyfzjg": "G/SAIC/register/wstzhhqyfzjg.jsp?t=" + tt,  # 外商投资合伙企业分支机构 type=13                # "wgqyzzgscjy": "G/SAIC/register/wgqyzzgscjy.jsp?t=" + tt,  # 外国（地区）企业在中国境内从事生产经营活动 type=14                # "zwhzffr": "G/SAIC/register/zwhzffr.jsp?t=" + tt,  # 中外合作非法人企业 type=15                # "gtgsh": "G/SAIC/register/gtgsh.jsp?t=" + tt,  # 个体工商户 type=16                # "nmzyhzs": "G/SAIC/register/nmzyhzs.jsp?t=" + tt,  # 农民专业合作社 type=17                # "nmzyhzsfz": "G/SAIC/register/nmzyhzsfz.jsp?t=" + tt  # 农民专业合作社分支机构 type=18            }            return "http://gsxt.cqgs.gov.cn/"+jbxx_table_urls.get(data_type)        module = Module(self.getWebHtml, "获取公司的table网页")        module.addSleep(Sleep(1))        module.appendUrl(url)        module.appendHeaders({            "Host": "gsxt.cqgs.gov.cn",            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:40.0) Gecko/20100101 Firefox/40.0",            "Accept": "application/json, text/plain, */*",            "Accept-Language": "zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3",            "Accept-Encoding": "gzip, deflate",            "X-Requested-With": "XMLHttpRequest",            "Referer": "http://gsxt.cqgs.gov.cn/search_ent",            "Connection": "keep-alive"        })        def storeHtml(web=None):            if web == None:                return False            self.page_dict[u'table_html'] = [web,]        module.addEvent(Event(EventType.EXCEPTION_OCCURED))        module.addEvent(Event(EventType.ASSERT_FAILED, retry_times=1, assert_function=lambda web = None:False if web == None else True))        module.appendExtraFunction(function=storeHtml)        super_module.appendSubModule(module, True)    def setRowKey(self, map_dict=None):        _dict = {}        _dict['company_name'] = self.value_dict['search_company']        _dict['company_zch'] = self.value_dict['zch']        self.page_dict['rowkey_dict'] = _dict        return True    def initNianbao(self,module_super):        module = Module(self.getWebHtml, "抓取公司的年报信息")        module.addSleep(Sleep(1))        module.appendUrl(lambda data_id,company_type: 'http://gsxt.cqgs.gov.cn/search_getYearReport.action?id=%s&type=%s' % (data_id,company_type))        module.appendHeaders({            "Host": "gsxt.cqgs.gov.cn",            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:40.0) Gecko/20100101 Firefox/40.0",            "Accept": "application/json, text/plain, */*",            "Accept-Language": "zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3",            "Accept-Encoding": "gzip, deflate",            "X-Requested-With": "XMLHttpRequest",            "Referer": "http://gsxt.cqgs.gov.cn/search_daily",            "Connection": "keep-alive"        })        def getjsonstr( html):            """            解析字符串，返回里面的json字符串            :param  (str):  可能含有json字符串的字符串  -> abc{xxx}            :return:  (str) json字符串 ->{xxx}            """            str = html.strip()            start = str.find('{')            fstart = str.find('[')            if fstart >= 0 and (fstart < start or start < 0):                start = fstart                end = str.rfind("]")            else:                end = str.rfind('}')            if start > -1 and end > start:                return json.loads(str[start:end + 1])        def getNblist(html):            json = getjsonstr(html)            history = json['history']            _list = []            for ll in history:                _list.append(ll['year'])            return _list        module.appendOutput('qynb_list',type=OutputType.FUNCTION, function=getNblist,show_up=OutputParameterShowUpType.OPTIONAL)        module_super.appendSubModule(module, True)    def initNbprepare(self,module_super):        iterator = Iterator(seeds="qynb_list", param_name="nb_name")        module = Module(None, u"获取公司年报", iterator)        module_super.appendSubModule(module, True)        self.initNbiter(module)        self.initNbzch(module)    def initNbiter(self,module_super):        sub_module = Module(self.visitQynbJson, u"获取年报详情")        sub_module.appendUrl(lambda data_id,company_type,nb_name: 'http://gsxt.cqgs.gov.cn/search_getYearReportDetail.action?id=%s&type=%s&year=%s' % (data_id,company_type,nb_name))        sub_module.appendHeaders({'Host': 'gsxt.cqgs.gov.cn',                                    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:40.0) Gecko/20100101 Firefox/40.0',                                    'Accept': 'application/json, text/plain, */*',                                    'Accept-Language': 'zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3',                                    'Accept-Encoding': 'gzip, deflate',                                    'X-Requested-With': 'XMLHttpRequest',                                    'Referer': 'http://gsxt.cqgs.gov.cn/search_yearReportDetail',                                    'Connection': 'keep-alive'})        module_super.appendSubModule(sub_module)    def initNbzch(self,module_super):        module = Module(self.getWebHtml, u"抓取公司年报信息的统一社会信用代码/注册号")        module.addSleep(Sleep(1))        module.appendUrl(lambda data_id, data_entid,                                company_type: 'http://gsxt.cqgs.gov.cn/search_getEnt.action?entId=%s&id=%s&stype=enterprise&type=%s' % (        data_entid, data_id, company_type))        module.appendHeaders({            "Host": "gsxt.cqgs.gov.cn",            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:40.0) Gecko/20100101 Firefox/40.0",            "Accept": "application/json, text/plain, */*",            "Accept-Language": "zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3",            "Accept-Encoding": "gzip, deflate",            "X-Requested-With": "XMLHttpRequest",            "Connection": "keep-alive"        })        def getjsonstr(html):            str = html.strip()            start = str.find('{')            fstart = str.find('[')            if fstart >= 0 and (fstart < start or start < 0):                start = fstart                end = str.rfind("]")            else:                end = str.rfind('}')            if start > -1 and end > start:                return json.loads(str[start:end + 1])        def storeHtml(web=None,html = None):            if web == None or html == None:                return False            html = getjsonstr(html)            web.body= html            name = u"qynb_%s_json" % self.value_dict['nb_name']            if name not in self.page_dict:                self.page_dict[name] = list()            self.page_dict[name].append(web)        module.appendExtraFunction(function=storeHtml)        module_super.appendSubModule(module, True)    def initResultCollect(self, module_super):        module = Module(self.resultCollect, "结果收集")        module_super.appendSubModule(module)