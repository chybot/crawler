# -*- coding: utf-8 -*-# Created by fml on 2016/5/18.import sysimport osimport timeimport reimport urlparseimport datetimereload(sys)sys.path.append('./util')from CrawlerBase import CrawlerBasefrom lxml import etreeimport jsonfrom ModuleManager import Module,Event,Iterator,Sleepfrom util.crawler_util import CrawlerRunMode, InputType, OutputType, EventType, OutputParameterShowUpTypefrom CommonLib.WebContent import WebAccessType, SeedAccessTypeclass CrawlerGansu(CrawlerBase):    def __init__(self,pinyin, callbackFromOuterControl):        config_dict = dict()        config_dict[CrawlerRunMode.COMPANY_KEY] = [self.initYzmPic,self.initSearchList,self.initCompanyInfo]        config_dict[CrawlerRunMode.COMPANY_URL] = [self.initCompanyInfoPrepare,self.initWebinfo,        self.initGdxq,        self.initNianbao,        self.initNbprepare,        self.initResultCollect]        check_dict = dict()        CrawlerBase.__init__(self, pinyin, config_dict, check_dict, callbackFromOuterControl)    def initYzmPic(self):        module = Module(self.getWebHtml, u"获取验证码图片")        module.module_id = "yzm_pic"        module.appendUrl('http://xygs.gsaic.gov.cn/gsxygs/securitycode.jpg')        module.appendHeaders({            u'Host':'xygs.gsaic.gov.cn',            u'User-Agent':'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:40.0) Gecko/20100101 Firefox/40.0',            u'Accept':'image/png,image/*;q=0.8,*/*;q=0.5',            u'Accept-Language':'zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3',            u'Accept-Encoding':'gzip, deflate',            u'Referer':'http://xygs.gsaic.gov.cn/gsxygs/pub!list.do',            u'Connection':'keep-alive'        })        module.addSleep(Sleep(3))        def getYzm():            cookie = self.downloader.getCookie()            for cc in cookie:                if cc.name == 'session_authcode':                    value = cc.value                    return value        module.appendOutput("yzm", type=OutputType.FUNCTION, function=getYzm,                            show_up=OutputParameterShowUpType.OPTIONAL)        self.module_manager.appendSubModule(module,supportDefaultEvent=True)    def initSearchList(self):        module = Module(self.getWebHtml, u'获取公司列表')        module.appendUrl('http://xygs.gsaic.gov.cn/gsxygs/pub!list.do')        module.appendHeaders({            u'Host': 'xygs.gsaic.gov.cn',            u'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:40.0) Gecko/20100101 Firefox/40.0',            u'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',            u'Accept-Language': 'zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3',            u'Accept-Encoding': 'gzip, deflate',            u'Referer': 'http://xygs.gsaic.gov.cn/gsxygs/main.jsp',            u'Connection': 'keep-alive',            u'Content-Type': 'application/x-www-form-urlencoded'        })        module.appendWebMethod('post')        module.appendPostData(lambda company_key,yzm: {"queryVal":company_key, "authCodeQuery":yzm})        module.addSleep(Sleep(6))        def getSearchList(html=None):            tree = etree.HTML(html)            _list = tree.xpath('.//div[@class="list"]')            return _list        def postDataJsonAssert1(html=None):            if u'请重新输入查询条件' in html or u"请您输入更精确的查询条件" in html:                self.report.access_type = SeedAccessType.NON_COMPANY                self.holder.logging.info(u"无此公司！")                return False            return True        def postDataJsonAssert2(search_list=None):            if not search_list:                return False            return True        module.appendOutput("search_list", type=OutputType.FUNCTION, function=getSearchList,show_up=OutputParameterShowUpType.OPTIONAL)        module.addEvent(Event(EventType.ASSERT_FAILED, retry_times=100, assert_function=postDataJsonAssert1))        module.addEvent(Event(EventType.ASSERT_FAILED, retry_times=2, assert_function=postDataJsonAssert2))        module.addEvent(Event(EventType.EXCEPTION_OCCURED, retry_times=100,redo_module='yzm_pic'))        module.addSleep(Sleep(3))        self.module_manager.appendSubModule(module)    def initCompanyInfo(self):        iterator = Iterator("search_list", "company")        module = Module(None, "获取公司信息", iterator)        self.module_manager.appendSubModule(module, True)        self.initCompanyInfoPrepare(module)        self.initWebinfo(module)        self.initGdxq(module)        self.initNianbao(module)        self.initNbprepare(module)        self.initResultCollect(module)    def initCompanyInfoPrepare(self,super_module):        module = Module(None, u"抓取公司前的预处理")        module.addSleep(Sleep(2))        def prepare(company):            query_ = dict()            query_['search_company'] = ''.join(company.xpath('.//a/text()')).strip()            query_['zch'] = ''.join(company.xpath('.//a/@id')).strip()            query_['entcate'] = ''.join(company.xpath('.//a/@ _entcate')).strip()            return query_        module.appendOutput(type=OutputType.FUNCTION, function=prepare)        super_module.appendSubModule(module, True)    def initWebinfo(self,super_module):        module = Module(self.visitJbxx, u"抓取公司信息")        module.addSleep(Sleep(2))        module.appendUrl('http://xygs.gsaic.gov.cn/gsxygs/pub!view.do')        module.appendHeaders({            u'Host': 'xygs.gsaic.gov.cn',            u'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:40.0) Gecko/20100101 Firefox/40.0',            u'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',            u'Accept-Language': 'zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3',            u'Accept-Encoding': 'gzip, deflate',            u'Referer': 'http://xygs.gsaic.gov.cn/gsxygs/pub!list.do',            u'Connection': 'keep-alive',            u'Content-Type': 'application/x-www-form-urlencoded'        })        module.appendWebMethod('post')        module.appendPostData(lambda zch,entcate:{'regno':zch,                                                    'entcate':entcate})        def getGdxq(html=None):            if not html:                return []            gdxq =[]            try:                tree = etree.HTML(html)                gdxq_list = tree.xpath('.//*[@id="invTab"]/tr/td/a')                gdxq = map(lambda x:'http://xygs.gsaic.gov.cn' + re.search(r'window\.open\(\'(.*)\'\)', x).group(1),gdxq_list)            except Exception as e:                pass            return gdxq        def getNbid(html = None):            if not html:                return None            nb_id = None            try:                tree = etree.HTML(html)                id_list = tree.xpath('.//*[@id="leftTabs"]/ul/li/@onclick')                id = id_list[0] if id_list else None                nb_id = eval(re.search('togo(\(.+?\))',id).group(1))[1:] if id else None            except Exception as e:                pass            return nb_id        module.appendOutput("gdxq_list", type=OutputType.FUNCTION, function=getGdxq,                            show_up=OutputParameterShowUpType.OPTIONAL)        module.appendOutput('nb_id',type=OutputType.FUNCTION, function=getNbid,                            show_up=OutputParameterShowUpType.OPTIONAL)        super_module.appendSubModule(module, True)    def initGdxq(self,module_super):        iterator = Iterator("gdxq_list", "gdxq_url")        module = Module(None, u"获取股东详情", iterator)        module_super.appendSubModule(module, True)        sub_module = Module(self.visitGdxq, u"获取股东详情信息")        sub_module.appendUrl('gdxq_url')        sub_module.appendHeaders({"Host" : "xygs.gsaic.gov.cn",                                "User-Agent" : "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:40.0) Gecko/20100101 Firefox/40.0",                                "Accept" : "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",                                "Accept-Language" : "zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3",                                "Accept-Encoding" : "gzip, deflate",                                "Referer" : "http://xygs.gsaic.gov.cn/gsxygs/pub!view.do"})        sub_module.addSleep(Sleep(3))        module.appendSubModule(sub_module)    def initNianbao(self,module_super):        module = Module(self.visitQynbList, u"抓取公司的年报信息列表")        module.addSleep(Sleep(1))        module.appendUrl(lambda nb_id:'http://xygs.gsaic.gov.cn/gsxygs/pub!viewE.do' if nb_id else None)        module.appendHeaders({            u'Host':'xygs.gsaic.gov.cn',            u'User-Agent':'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:40.0) Gecko/20100101 Firefox/40.0',            u'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',            u'Accept-Language':'zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3',            u'Accept-Encoding':'gzip, deflate',            u'Referer':'http://xygs.gsaic.gov.cn/gsxygs/pub!view.do',            u'Connection':'keep-alive',            u'Content-Type':'application/x-www-form-urlencoded'        })        module.appendWebMethod('post')        module.appendPostData(lambda nb_id:{'pripid':nb_id[0],'regno':nb_id[1],'entcate':nb_id[2]} if len(nb_id) == 3 else {})        def getNblist(html = None):            nb_url =[]            try:                if not html:                    return nb_url                tree = etree.HTML(html)                urls = tree.xpath('.//*[@class="detailsList"]/tr/td/a/@onclick')                nb_url = map(lambda x:re.search('window\.open\(\'(.+?)\'\)',x).group(1),urls)                return nb_url            except Exception as e:                pass            return nb_url        module.appendOutput('qynb_list',type=OutputType.FUNCTION, function=getNblist,show_up=OutputParameterShowUpType.OPTIONAL)        module_super.appendSubModule(module, True)    def initNbprepare(self,module_super):        iterator = Iterator(seeds="qynb_list", param_name="nb_url")        module = Module(None, u"获取公司年报", iterator)        module_super.appendSubModule(module, True)        self.initNbxxprepare(module)        self.initNbiter(module)    def initNbxxprepare(self, module_super):        module = Module(None, u"抓取年报-预处理")        # 准备后续模块需要的必要参数        def prepareParms(nb_url=None):            query_dict = {}            url = urlparse.urljoin('http://xygs.gsaic.gov.cn',nb_url)            query_dict['url'] =url            nb_name = re.search('reportYear\=(\d+)',nb_url).group(1)            query_dict['nb_name'] =nb_name            return query_dict        module.appendOutput(type=OutputType.FUNCTION, function=prepareParms)        module_super.appendSubModule(module, True)    def initNbiter(self,module_super):        sub_module = Module(self.visitQynb, u"获取年报详情")        sub_module.appendUrl('url')        sub_module.appendHeaders({u'Host':'xygs.gsaic.gov.cn',                                    u'User-Agent':'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:40.0) Gecko/20100101 Firefox/40.0',                                    u'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',                                    u'Accept-Language':'zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3',                                    u'Accept-Encoding':'gzip, deflate',                                    u'Referer':'http://xygs.gsaic.gov.cn/gsxygs/pub!view.do',                                    u'Connection':'keep-alive'})        module_super.appendSubModule(sub_module)    def initResultCollect(self, module_super):        module = Module(self.resultCollect, "结果收集")        module_super.appendSubModule(module)